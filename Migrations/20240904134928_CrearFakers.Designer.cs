// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Taller.Data;

#nullable disable

namespace Taller.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20240904134928_CrearFakers")]
    partial class CrearFakers
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Taller.Models.Propietario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FotoPerfil")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NumeroIdentificaion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.HasKey("Id");

                    b.ToTable("propietarios", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Apellido = "Zemlak",
                            Correo = "Luella15@yahoo.com",
                            Direccion = "6586 Ethelyn Springs, East Addie, Lithuania",
                            FotoPerfil = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/317.jpg",
                            Nombre = "Cara",
                            NumeroIdentificaion = "vi6inbbujw",
                            Telefono = "(526) 203-8157 x19449"
                        },
                        new
                        {
                            Id = 2,
                            Apellido = "Beahan",
                            Correo = "Victor_Runte@hotmail.com",
                            Direccion = "2704 Nienow Garden, Wizaburgh, Costa Rica",
                            FotoPerfil = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/645.jpg",
                            Nombre = "Maiya",
                            NumeroIdentificaion = "g0nr5ec37g",
                            Telefono = "(684) 483-2537"
                        },
                        new
                        {
                            Id = 3,
                            Apellido = "Legros",
                            Correo = "Wilfredo5@hotmail.com",
                            Direccion = "35330 Sim Parks, New Dustybury, French Southern Territories",
                            FotoPerfil = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/949.jpg",
                            Nombre = "Litzy",
                            NumeroIdentificaion = "nlkpihhfc0",
                            Telefono = "(461) 790-9044 x495"
                        },
                        new
                        {
                            Id = 4,
                            Apellido = "Homenick",
                            Correo = "Clemens96@yahoo.com",
                            Direccion = "2590 Hobart Inlet, East Wendell, Suriname",
                            FotoPerfil = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/950.jpg",
                            Nombre = "Josephine",
                            NumeroIdentificaion = "it66feevy5",
                            Telefono = "891.847.6218 x85874"
                        },
                        new
                        {
                            Id = 5,
                            Apellido = "Schimmel",
                            Correo = "Coleman41@hotmail.com",
                            Direccion = "80680 Earline Parkway, Port Chelsey, Dominican Republic",
                            FotoPerfil = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1056.jpg",
                            Nombre = "Raleigh",
                            NumeroIdentificaion = "3vtis9dr4l",
                            Telefono = "1-566-570-9949"
                        },
                        new
                        {
                            Id = 6,
                            Apellido = "Kutch",
                            Correo = "Jacklyn69@gmail.com",
                            Direccion = "2085 Benedict Fords, Ovastad, Republic of Korea",
                            FotoPerfil = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/999.jpg",
                            Nombre = "Leola",
                            NumeroIdentificaion = "yhyetifr4c",
                            Telefono = "523.998.5217 x2255"
                        },
                        new
                        {
                            Id = 7,
                            Apellido = "Hansen",
                            Correo = "Justyn_Wintheiser@hotmail.com",
                            Direccion = "03066 Leif Ways, Schowalterfurt, Antarctica (the territory South of 60 deg S)",
                            FotoPerfil = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1080.jpg",
                            Nombre = "Cruz",
                            NumeroIdentificaion = "kcn99gauyv",
                            Telefono = "1-711-241-6708"
                        },
                        new
                        {
                            Id = 8,
                            Apellido = "Grant",
                            Correo = "Bennett.Armstrong@gmail.com",
                            Direccion = "3771 Jensen Alley, Towneburgh, Chile",
                            FotoPerfil = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/254.jpg",
                            Nombre = "Shaniya",
                            NumeroIdentificaion = "wfcehq5iwn",
                            Telefono = "(517) 329-3140"
                        },
                        new
                        {
                            Id = 9,
                            Apellido = "Bergnaum",
                            Correo = "Marilyne.Brekke@gmail.com",
                            Direccion = "475 Johnson Corner, Dietrichmouth, South Africa",
                            FotoPerfil = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/737.jpg",
                            Nombre = "Neal",
                            NumeroIdentificaion = "p7f2sdfq7i",
                            Telefono = "306-284-7590"
                        },
                        new
                        {
                            Id = 10,
                            Apellido = "Leuschke",
                            Correo = "Adelbert_Bauch64@yahoo.com",
                            Direccion = "34660 Kenna Tunnel, New Baronhaven, Pakistan",
                            FotoPerfil = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1075.jpg",
                            Nombre = "Gussie",
                            NumeroIdentificaion = "es27ujkk76",
                            Telefono = "696-802-7141 x081"
                        },
                        new
                        {
                            Id = 11,
                            Apellido = "Grimes",
                            Correo = "Marquise.Nicolas@yahoo.com",
                            Direccion = "714 Schumm Mountain, Iciehaven, Nigeria",
                            FotoPerfil = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/123.jpg",
                            Nombre = "Roman",
                            NumeroIdentificaion = "nas7nyu6v9",
                            Telefono = "(799) 536-6151 x91511"
                        },
                        new
                        {
                            Id = 12,
                            Apellido = "Schamberger",
                            Correo = "Jessie63@gmail.com",
                            Direccion = "416 Valentine Center, New Ada, French Guiana",
                            FotoPerfil = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/120.jpg",
                            Nombre = "Aurelia",
                            NumeroIdentificaion = "r9amn7y5ld",
                            Telefono = "610-998-7943 x6544"
                        });
                });

            modelBuilder.Entity("Taller.Models.Vehiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Año")
                        .HasMaxLength(4)
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NumeroChasis")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.Property<int>("PropietarioID")
                        .HasColumnType("int");

                    b.Property<string>("TipoVehiculo")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("PropietarioID");

                    b.ToTable("vehiculos", (string)null);
                });

            modelBuilder.Entity("Taller.Models.Vehiculo", b =>
                {
                    b.HasOne("Taller.Models.Propietario", "Propietario")
                        .WithMany("Vehiculos")
                        .HasForeignKey("PropietarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Propietario");
                });

            modelBuilder.Entity("Taller.Models.Propietario", b =>
                {
                    b.Navigation("Vehiculos");
                });
#pragma warning restore 612, 618
        }
    }
}
